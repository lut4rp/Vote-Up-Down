<?php
/* $Id: vud_node.module,v 1.1.2.3 2009/05/03 19:26:15 lut4rp Exp $ */

/**
 * @file
 * Adds a voting widget to nodes.
 */

/**
 * Implementation of hook_perm().
 */
function vud_node_perm() {
  return array('use vote up/down on nodes', 'administer vote up/down on nodes', 'see vote up/down node stats');
}

/**
 * Implementation of hook_menu().
 */
function vud_node_menu() {
  $items = array();

  $items['admin/settings/voteupdown/node'] = array(
    'title' => 'Node',
    'description' => 'Vote Up/Down Node settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vud_node_admin_settings'),
    'access arguments' => array('administer vote up/down on nodes'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['node/%node/votes'] = array(
    'title' => 'Voting details',
    'page callback' => 'vud_node_tracker',
    'access arguments' => array('see vote up/down node stats'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Advanced menu settings callback.
 */
function vud_node_admin_settings() {
  $form['vote_node_types'] = array(
    '#type' => 'fieldset',
    '#title' => t('Node types'),
    '#description' => t('Select the node types you want to activate voting on.'),
  );
  $form['vote_node_types']['vote_up_down_node_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Types'),
    '#default_value' => variable_get('vote_up_down_node_types', array()),
    '#options' => node_get_types('names'),
  );

  $form['vote_widget_settings_node'] = array(
    '#type' => 'fieldset',
    '#title' => t('Vote widget settings for nodes'),
    '#description' => t('For more control over the voting widget placement, it can be inserted directly in the theme. See the included template.php and node-storylink.tpl.php for an example. When this method is used, turn off the widget display here.'),
  );
  $form['vote_widget_settings_node']['vote_up_down_widget_style_node'] = array(
    '#type' => 'radios',
    '#title' => t('Vote widget style'),
    '#default_value' => variable_get('vote_up_down_widget_style_node', 0),
    '#options' => array(0 => t('Default +1/-1 vote style'), 1 => t('Alternative +1 vote style')),
    '#description' => t('If set to alternative style, it\'s recomended to turn off the link display of vote points.'),
  );
  $form['vote_widget_settings_node']['vote_up_down_widget_node'] = array(
    '#type' => 'select',
    '#title' => t('Vote widget display'),
    '#default_value' => variable_get('vote_up_down_widget_node', 3),
    '#options' => array(0 => t('Disabled'), 1 => t('Teaser view'), 2 => t('Full-page view'), 3 => t('Teasers and full-page view')),
    '#description' => t('When to display the vote widget for nodes?'),
  );
  $form['vote_widget_settings_node']['vote_up_down_link_node'] = array(
    '#type' => 'select',
    '#title' => t('Link display of vote points'),
    '#default_value' => variable_get('vote_up_down_link_node', 3),
    '#options' => array(0 => t('Disabled'), 1 => t('Teaser view'), 2 => t('Full-page view'), 3 => t('Teasers and full-page view')),
    '#description' => t('When to display vote points for nodes?'),
  );

  return system_settings_form($form);
}

/**
 * Implementation of hook_nodeapi().
 */
function vud_node_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  switch ($op) {
    case 'view':
      if (user_access('view up/down votes')) {
        $node_type = in_array($node->type, variable_get('vote_up_down_node_types', array()), TRUE);
        if ($node_type) {
          $style = variable_get('vote_up_down_widget_style_node', 0) == 1 ? '_alt' : '';
          if ($teaser && variable_get('vote_up_down_widget_node', 0) && variable_get('vote_up_down_widget_node', 0) != 2) {
            $node->content['vote_up_down'] = array(
              '#value' => theme("vote_up_down_widget$style", $node->nid, 'node'),
              '#weight' => -10,
            );
          }
          else if (!$teaser && variable_get('vote_up_down_widget_node', 0) > 1) {
            $node->content['vote_up_down'] = array(
              '#value' => theme("vote_up_down_widget$style", $node->nid, 'node'),
              '#weight' => -10,
            );
          }
        }
      }
      break;
  }
}
